#Install packages
#Little test
install.packages("BaylorEdPsych")
install.packages("plyr")
install.packages("dplyr")
library(BaylorEdPsych)
install.packages("mvnmle")
library(mvnmle)
installed.packages("cluster")
library(cluster)
installed.packages("dplyr")
library("plyr")
library("dplyr")
getwd();
#set your working directory
setwd("/Users/yago/Documents/Clase/DataMining-SpeedDating");
data <-read.csv("SpeedClean.csv", header=TRUE)
#to deal with mixed numeric and categorical variables
actives<-c(2:36)
dissimMatrix <- daisy(data[,c(2:36)], metric = "gower", stand=TRUE)
distMatrix<-dissimMatrix^2
cluster <- hclust(distMatrix,method="ward.D") #this should be a high cost operation but it's not. Maybe I'm doing something wrong?
#versions noves "ward.D" i abans de plot: par(mar=rep(2,4)) si se quejara de los margenes del plot
#this would be enough if we only had numerical variables
#cluster <- hclust(dist(as.matrix(data)),method="ward.D2")
plot(cluster)
View(data)
View(data)
clusterCut <- cutree(cluster, 7)
plot(clusterCut)
table(clusterCut, data$match)
clustersMatchTable <- table(clusterCut, data$match)
clustersMatchTable
for (row in 1:nrow(clustersMatchTable)) {
N <- stock[row, "N"]
Y  <- stock[row, "Y"]
}
for (row in 1:nrow(clustersMatchTable)) {
N <- clustersMatchTable[row, "N"]
Y  <- clustersMatchTable[row, "Y"]
}
table
table
รงรง
table(clustersMatchTable)
clustersMatchTable
table(clustersMatchTable)
table(clustersMatchTable)
table(clustersMatchTable)
table(clustersMatchTable)
table(clustersMatchTable)
table(clustersMatchTable)
table
table(clustersMatchTable)
table(clustersMatchTable)
table(clustersMatchTable)
table(clustersMatchTable)
table(clustersMatchTable)
func()
func <- function() {
return (5+4)
}
func()
table <- function(clustersMatchTable, row) {
vector <- 1:nrow(clustersMatchTable)
for (row in 1:nrow(clustersMatchTable)) {
N <- clustersMatchTable[row, "N"] + N;
Y <- clustersMatchTable[row, "Y"] + Y;
}
return (vector)
}
func()
table(clustersMatchTable)
table <- function(clustersMatchTable, row) {
vector <- 1:nrow(clustersMatchTable)
for (row in 1:nrow(clustersMatchTable)) {
N <- clustersMatchTable[row, "N"];
Y <- clustersMatchTable[row, "Y"];
vector[row] <- Y/N
}
return (vector)
}
table(clustersMatchTable)
table <- function(clustersMatchTable, row) {
vector <- 1:nrow(clustersMatchTable)
for (row in 1:nrow(clustersMatchTable)) {
N <- clustersMatchTable[row, "N"];
Y <- clustersMatchTable[row, "Y"];
vector[row] <- (Y/N)*100
}
return (vector)
}
table(clustersMatchTable)
table(clustersMatchTable)
clustersMatchTable
getMatchChanceForEachCluster <- function(clustersMatchTable) {
vector <- 1:nrow(clustersMatchTable)
for (row in 1:nrow(clustersMatchTable)) {
N <- clustersMatchTable[row, "N"];
Y <- clustersMatchTable[row, "Y"];
vector[row] <- (Y/N)*100
}
return (vector)
}
getMatchChanceForEachCluster(clustersMatchTable)
clustersMatchTable <- table(clusterCut, data)
clustersMatchTable <- table(clusterCut, data)
clustersTable <- table(clusterCut, data)
clustersTable <- table(clusterCut, data$match)
clustersTable <- table(clusterCut, data$match)
clustersMatchTable <- table(clusterCut, data$match)
clusterCut <- cutree(cluster, 7)
clustersTable <- table(clusterCut, data$match)
clustersMatchTable <- table(clusterCut, data$match)
#Install packages
#Little test
install.packages("BaylorEdPsych")
install.packages("plyr")
install.packages("dplyr")
library(BaylorEdPsych)
install.packages("mvnmle")
library(mvnmle)
installed.packages("cluster")
library(cluster)
installed.packages("dplyr")
library("plyr")
library("dplyr")
getwd();
#set your working directory
setwd("/Users/yago/Documents/Clase/DataMining-SpeedDating");
data <-read.csv("SpeedClean.csv", header=TRUE)
#to deal with mixed numeric and categorical variables
actives<-c(2:36)
dissimMatrix <- daisy(data[,c(2:36)], metric = "gower", stand=TRUE)
distMatrix<-dissimMatrix^2
cluster <- hclust(distMatrix,method="ward.D") #this should be a high cost operation but it's not. Maybe I'm doing something wrong?
#versions noves "ward.D" i abans de plot: par(mar=rep(2,4)) si se quejara de los margenes del plot
#this would be enough if we only had numerical variables
#cluster <- hclust(dist(as.matrix(data)),method="ward.D2")
plot(cluster)
install.packages("BaylorEdPsych")
clear
clear all
setwd("/Users/yago/Documents/Clase/DataMining-SpeedDating");
data <-read.csv("SpeedClean.csv", header=TRUE)
setwd("/Users/yago/Documents/Clase/DataMining-SpeedDating");
data <-read.csv("SpeedClean.csv", header=TRUE)
actives<-c(2:ncol(data))
dissimMatrix <- daisy(data[,ncol(data)], metric = "gower", stand=TRUE)
dissimMatrix <- daisy(data[,c(2:36)], metric = "gower", stand=TRUE)
install.packages("BaylorEdPsych")
install.packages("plyr")
install.packages("dplyr")
